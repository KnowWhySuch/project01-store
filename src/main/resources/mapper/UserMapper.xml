<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cy.store.mapper.UserMapper">

    <!--
        useGeneratedKeys:开启某个字段的值递增（主键设置为递增）
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO
            t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user, created_time, modified_user, modified_time)
        VALUES
        (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}, #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>
    <!--
        resultType:表示查询的结果集类型，只需要指定对应映射类的类型。
        resultMap：表示当表的属性和类的对象属性的字段名称不一致时，自定义查询结果集的映射规则
    -->
    <!--
    自定义映射规则:
        id属性：给这个规则起名字
        type属性：取值是一个类，表示的是数据库中查询结果与java中哪个实体类进行结果集的映射
    -->
        <resultMap id="UserEntityMap" type="com.cy.store.entity.User">
<!--
    将表的资源和类的属性不一致的字段进行匹配指定，名称一样的字段可以不写。主键不能省略
    column属性：表示表中的字段名
    property属性：表示类中的属性名称
-->
            <id column="uid" property="uid"/>
            <result column="is_delete" property="isDelete"/>
            <result column="created_user" property="createdUser"/>
            <result column="created_time" property="createdTime"/>
            <result column="modified_user" property="modifiedUser"/>
            <result column="modified_time" property="modifiedTime"/>
        </resultMap>

    <select id="findByUsername" resultMap="UserEntityMap">
        select * from t_user where username = #{username}
    </select>

    <select id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid = #{uid}
    </select>

    <update id="updatePasswordByUid">
        update t_user set
                          password = #{password},
                          modified_user = #{modifiedUser},
                          modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>

    <update id="updateInfoByUid">
        update t_user
        set
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where uid = #{uid}
    </update>

    <update id="updateAvatarByUid">
        update t_user
        set
            avatar = #{avatar},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where
            uid = #{uid}
    </update>
</mapper>